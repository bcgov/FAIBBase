% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSpatial.R
\name{getSpatial}
\alias{getSpatial}
\title{Generic function to derive BEC, TSA and FIZ for given locations}
\usage{
getSpatial(pointID, zone, northing, easting, spatialMap, spatialAttribute)
}
\arguments{
\item{pointID}{character, Data point ID.}

\item{zone}{integer, UTM zone.}

\item{northing}{integer, UTM northing.}

\item{easting}{integer, UTM easting.}

\item{spatialMap}{SpatialPolygonsDataFrame or sf, Spatial map. The spatial maps are from BC Data catalogue website. You can
obtain these maps using bcdata package.}

\item{spatialAttribute}{character, Specifies which spatial attribute to be obtained.
Must be one of "BEC", "TSA", "FIZ", "TFL" and "OWNERSHIP",
regardless of lower or upper cases. Must be consistent with
\code{spatialMap} arguement.}
}
\value{
Depends on what spatial attribute a function derives.
For \code{BEC}, a table that contains:
\itemize{
\item{bec_zone} {bec zone.}
\item{bec_sbz} {bec subzone.}
\item{bec_var} {bec variant}
}
For \code{TSA}, a table that contains:
\itemize{
\item{tsa} {tsa.}
\item{tsa_desc} {tsa descriptions.}
}
For \code{FIZ}, a table that contains:
\itemize{
\item{fiz} {fiz forest inventory zone.}
}
For \code{TFL}, a table that contains:
\itemize{
\item{tfl} {tfl timber farm licenses.}
}
For \code{OWNERSHIP}, a table that contains:
\itemize{
\item{owner} {owner of land.}
\item{schedule} {schedule.}
}
}
\description{
This function is to derive \code{BEC}, \code{TSA} or {FIZ} based on an UTM location and BEC map.
}
\examples{
\dontrun{
 ## for Prince Rupert, Fort Nelson, Prince George, Victoria, Kelowna
 citylocs <- data.frame(point_ID = c("Prince Rupert", "Prince George", "Victoria", "Kelowna"),
                        zone = c(9, 10, 10, 11),
                        northing = c(6019079.41, 5974323.27, 5361626.96, 5528467),
                        easting = c(415075.83, 516441.65, 475594.70, 321996.76))
 tsamap <- bcmaps::tsa(class = "sp")
 city_tsa <- getSpatial(pointID = citylocs$point_ID,
                        zone = citylocs$zone,
                        northing = citylocs$northing,
                        easting = citylocs$easting,
                        spatialMap = tsamap,
                        spatialAttribute = "TSA")
 print(city_tsa)
 #         pointID tsa          tsa_desc
 #   Prince Rupert  46     GBR North TSA
 #   Prince George  24 Prince George TSA
 #        Victoria  38    Arrowsmith TSA
 #         Kelowna  22      Okanagan TSA

 becmap <- bcmaps::bec(class = "sp")
 city_bec <- getSpatial(pointID = citylocs$point_ID,
                        zone = citylocs$zone,
                        northing = citylocs$northing,
                        easting = citylocs$easting,
                        spatialMap = becmap,
                        spatialAttribute = "bec")
 print(city_bec)
 #        pointID bec_zone bec_sbz bec_var
 #  Prince Rupert      CWH      vh       2
 #  Prince George      SBS      mh    <NA>
 #       Victoria      CDF      mm    <NA>
 #        Kelowna       PP      xh       1
}
}
\author{
Yong Luo
}
