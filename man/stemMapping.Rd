% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stemMapping.R
\docType{methods}
\name{stemMapping}
\alias{stemMapping}
\title{Map stems in a plot.}
\usage{
stemMapping(
  objectID,
  bearing,
  distance,
  plotShape = as.character(NA),
  plotSize,
  distanceUnit,
  outputFormat
)
}
\arguments{
\item{objectID}{character, A object's ID, e.g., a tree's ID.}

\item{bearing}{numeric, Azimuth of a object from the north. It should be between 0 to 360.}

\item{distance}{numeric, Distance between a object and the centre of the circle.}

\item{plotShape}{character, circle, Rectangle or NA. NA means no plot shape information is not available and
and no plot geometry will be produced.}

\item{plotSize}{numeric, Defines the plot geoimetry. If plotShape is circular, a number must be provided as plot radius.
If plotShape is rectangle, two numbers must be provided to determine length and width of a
plot.}

\item{distanceUnit}{character, Defines the unit in the stem mapping.}

\item{outputFormat}{character, Defines whether a \code{table} or a \code{figure} will be returned
from this function.}
}
\value{
\enumerate{
\item A table contains the x and y for all the objects and the plot boundary.
2) a ggplot object will be returned for visualization.
}
}
\description{
The function is to map all the stems in a plot based on bearing and distance.
}
\examples{
\dontrun{
## randomly generate some trees
library(data.table)
smallplottrees <- data.table(expand.grid(angle = seq(0, 360, 1),
                              distance = seq(0.1, 5.6, 0.1)))
smallplottrees[, tree_id := 1:nrow(smallplottrees)]
## extend it to 1 ha
treelist_smallplot <- stemMappingExtension(objectID = smallplottrees$tree_id,
                                           bearing = smallplottrees$angle,
                                           distance = smallplottrees$distance,
                                           plotRadius = 5.64,
                                           randomRotate = TRUE)
smallplottrees[tree_id \%in\% treelist_smallplot$objectID,
              inHexigon := "Yes"]
smallplottrees[is.na(inHexigon),
              inHexigon := "No"]
smallplottrees[,':='(x = sin(angle*pi/180)*distance,
                     y = cos(angle*pi/180)*distance)]
library(ggplot2)
thefig <- ggplot(data = smallplottrees, aes(x = x, y = y))+
 geom_point(aes(col = inHexigon))

bigplottrees <- data.table(tree_id = 1:20,
                           angle = runif(20, min = 0, max = 360),
                           distance = runif(20, min = 0, max = 11.28))
## extend it to 1 ha
treelist_bigplot <- stemMappingExtension(objectID = bigplottrees$tree_id,
                                         bearing = bigplottrees$angle,
                                         distance = bigplottrees$distance,
                                         plotRadius = 11.28)
treelist_smallplot[, source := "smallplot"]
treelist_bigplot[, source := "bigplot"]


alltreelist <- rbind(treelist_bigplot, treelist_smallplot)


alltreeplot <- ggplot(data = alltreelist, aes(x, y))+
 geom_point(aes(col = factor(source)))+
 geom_point(data = alltreelist[hexagonID == 0,],
 aes(x, y), col = "red")

}

}
\author{
Yong Luo
}
